TotalEnrollment =  tapply(df$total_enrollment,df$`School Type`, sum)
Read =c(Readingaverage)
Math =c(Mathaverage)
Writing = c(Writingaverage)
ReadSD = c(ReadingSD)
MathsSD = c(MathSD)
WritSD =c(WritingSD)
Taker= c(SATtesttaker)
Enrol= c (TotalEnrollment)
rbind(Read, Math, Writing, ReadSD, MathsSD, WritSD, Taker, Enrol)
tapply(df, df$`School Type`, n)
tapply(df$DBN, df$`School Type`, n)
tapply(df$DBN, df$`School Type`, n)
tapply(df$DBN, df$`School Type`, n())
df%>%group_by(`School Type`)%>%summarize(n=n())
df%>%group_by(`School Type`)%>%summarize(n=n())
color="orange",position = "jitter")
df%>%group_by(`School Type`)%>%summarize(n=n())
df%>%
group_by(`School Type`)%>%
summarize(n=n())
df
df%>%
group_by(`School Type`)%>%
summarize(n=n())
test<-df%>%
group_by(`School Type`)%>%
summarize(n=n())
View(test)
SATtesttaker =  tapply(df$`Num of SAT Test Takers`,df$`School Type`, sum)
TotalEnrollment =  tapply(df$total_enrollment,df$`School Type`, sum)
Read =c(Readingaverage)
Math =c(Mathaverage)
Writing = c(Writingaverage)
ReadSD = c(ReadingSD)
MathsSD = c(MathSD)
WritSD =c(WritingSD)
Taker= c(SATtesttaker)
Enrol= c (TotalEnrollment)
rbind(Read, Math, Writing, ReadSD, MathsSD, WritSD, Taker, Enrol)
test<-df%>%
group_by(`School Type`)%>%
summarize(n=n())
df%>%
group_by(`School Type`)%>%
summarize(n=n())
rbind(Read, Math, Writing, ReadSD, MathsSD, WritSD, Taker, Enrol)
pl_math<-ggplot(data = df)+
geom_point(mapping = aes(x = `Num of SAT Test Takers`,y = `SAT Math Avg. Score`),
color="red",position = "jitter")
pl_reading<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers`,y =`SAT Critical Reading Avg. Score`),color="green",position = "jitter")
pl_writing<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers` ,y = `SAT Writing Avg. Score`),
color="orange",position = "jitter")
ggarrange(pl_math,pl_reading,pl_writing)
ggarrange(pl_math,pl_reading,pl_writing)
knitr::opts_chunk$set(echo = TRUE)
#Loading Required Library's
# install these library's if they are missing in your local machine
#with install.packages()
#install.packages('here')
#install.packages('data.table')
#install.packages('dplyr')
#install.packages("corrplot", dependencies = TRUE)
#install.packages("ztable")
#install.packages("moments")
library(here)
library(data.table)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(corrplot)
library(ztable)
library(moments)
library(readxl)
library(openxlsx)
sat_scores<-
fread(here("RawData","2012_SAT_Results.csv"))
school_demographic<-
fread(here("RawData","2006_-_2012_School_Demographics_and_Accountability_Snapshot.csv"))
school_survey<-
fread(here("RawData","2012_NYC_General_Education_School_Survey.csv"))
school_demographic2012<-school_demographic%>%filter(schoolyear=="20112012")
joined_satanddemographic<-left_join(sat_scores,school_demographic2012,"DBN")
all_joined<-left_join(joined_satanddemographic,school_survey,"DBN")
df<-
all_joined%>%select(DBN,
`SCHOOL NAME`,
'School Type',
`Num of SAT Test Takers`,
'total_enrollment',
`SAT Critical Reading Avg. Score`,
`SAT Math Avg. Score`,
`SAT Writing Avg. Score`,
male_per,
female_per,
black_per,
white_per,
hispanic_per,
asian_per,
ell_percent,
frl_percent,
`Total Engagement Score`)
df$`Num of SAT Test Takers`[] <-
lapply(df$`Num of SAT Test Takers`,function(x)as.character(gsub("s", NA, x)))
df<-na.omit(df)
df<-df%>%filter(!is.na(df$`Num of SAT Test Takers`))
df[4:length(df)]<-lapply(df[4:length(df)],function(x) as.numeric(x)) # converting
str(df) # checking to makes sure that the all the character columns have been
# converted to numeric
Readingaverage =  tapply(df$`SAT Critical Reading Avg. Score`,df$`School Type`, mean)
Mathaverage =  tapply(df$`SAT Math Avg. Score`,df$`School Type`, mean)
Writingaverage =  tapply(df$`SAT Writing Avg. Score`,df$`School Type`, mean)
ReadingSD =  tapply(df$`SAT Critical Reading Avg. Score`,df$`School Type`, sd)
MathSD =  tapply(df$`SAT Math Avg. Score`,df$`School Type`, sd)
WritingSD =  tapply(df$`SAT Writing Avg. Score`,df$`School Type`, sd)
SATtesttaker =  tapply(df$`Num of SAT Test Takers`,df$`School Type`, sum)
TotalEnrollment =  tapply(df$total_enrollment,df$`School Type`, sum)
Read =c(Readingaverage)
Math =c(Mathaverage)
Writing = c(Writingaverage)
ReadSD = c(ReadingSD)
MathsSD = c(MathSD)
WritSD =c(WritingSD)
Taker= c(SATtesttaker)
Enrol= c (TotalEnrollment)
rbind(Read, Math, Writing, ReadSD, MathsSD, WritSD, Taker, Enrol)
pl_math<-ggplot(data = df)+
geom_point(mapping = aes(x = `Num of SAT Test Takers`,y = `SAT Math Avg. Score`),
color="red",position = "jitter")
pl_reading<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers`,y =`SAT Critical Reading Avg. Score`),color="green",position = "jitter")
pl_writing<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers` ,y = `SAT Writing Avg. Score`),
color="orange",position = "jitter")
ggarrange(pl_math,pl_reading,pl_writing)
df$totgen = df$male_per + df$female_per
df$totdiv = df$black_per + df$white_per + df$hispanic_per + df$asian_per
#Simpson Diversity index
df$div = 1 - (((df$black_per*(df$black_per-1))+(df$white_per*(df$white_per-1))+(df$hispanic_per*(df$hispanic_per-1))+(df$asian_per*(df$asian_per-1)))/9900)
percentmiss = function(x){sum(is.na(x))/length(x)*100} #percent miss row
missing = apply(df,1,percentmiss)
table(missing)
replace = subset(df, missing <= 5)
missing1 = apply(replace,1,percentmiss)
table(missing1)
dont = subset(df, missing > 5)
missing2 = apply(dont,1,percentmiss)
table(missing2)
table(missing2)
mah = mahalanobis(replace[,-c(1,2,16,17,18)],
colMeans(replace[,-c(1,2,16,17,18)], na.rm=TRUE),
cov(replace[,-c(1,2,16,17,18)], use ="pairwise.complete.obs")
)    # This piece of code doesn't seem to work
title: "NYSAT"
author: "EKLAR"
date: 'null'
output:
html_document:
df_print: paged
pdf_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
#Links to the Datasource
+ NYC sat scores for 2012-https://data.cityofnewyork.us/Education/2012-SAT-Results/f9bf-2cp4
+ school accountability- https://data.cityofnewyork.us/Education/2006-2012-School-Demographics-and-Accountability-S/ihfw-zy9j
+ NYC general education survey-https://data.cityofnewyork.us/Education/2012-NYC-General-Education-School-Survey/xiyj-m4sj
```{r,include=FALSE}
#Loading Required Library's
# install these library's if they are missing in your local machine
#with install.packages()
#install.packages('here')
#install.packages('data.table')
#install.packages('dplyr')
#install.packages("corrplot", dependencies = TRUE)
#install.packages("ztable")
#install.packages("moments")
library(here)
library(data.table)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(corrplot)
library(ztable)
library(moments)
library(readxl)
library(openxlsx)
```
```{r, reading the data,include=FALSE}
sat_scores<-
fread(here("RawData","2012_SAT_Results.csv"))
school_demographic<-
fread(here("RawData","2006_-_2012_School_Demographics_and_Accountability_Snapshot.csv"))
school_survey<-
fread(here("RawData","2012_NYC_General_Education_School_Survey.csv"))
school_demographic2012<-school_demographic%>%filter(schoolyear=="20112012")
joined_satanddemographic<-left_join(sat_scores,school_demographic2012,"DBN")
all_joined<-left_join(joined_satanddemographic,school_survey,"DBN")
df<-
all_joined%>%select(DBN,
`SCHOOL NAME`,
'School Type',
`Num of SAT Test Takers`,
'total_enrollment',
`SAT Critical Reading Avg. Score`,
`SAT Math Avg. Score`,
`SAT Writing Avg. Score`,
male_per,
female_per,
black_per,
white_per,
hispanic_per,
asian_per,
ell_percent,
frl_percent,
`Total Engagement Score`)
df$`Num of SAT Test Takers`[] <-
lapply(df$`Num of SAT Test Takers`,function(x)as.character(gsub("s", NA, x)))
df<-na.omit(df)
df<-df%>%filter(!is.na(df$`Num of SAT Test Takers`))
df[4:length(df)]<-lapply(df[4:length(df)],function(x) as.numeric(x)) # converting
str(df) # checking to makes sure that the all the character columns have been
# converted to numeric
Readingaverage =  tapply(df$`SAT Critical Reading Avg. Score`,df$`School Type`, mean)
Mathaverage =  tapply(df$`SAT Math Avg. Score`,df$`School Type`, mean)
Writingaverage =  tapply(df$`SAT Writing Avg. Score`,df$`School Type`, mean)
ReadingSD =  tapply(df$`SAT Critical Reading Avg. Score`,df$`School Type`, sd)
MathSD =  tapply(df$`SAT Math Avg. Score`,df$`School Type`, sd)
WritingSD =  tapply(df$`SAT Writing Avg. Score`,df$`School Type`, sd)
SATtesttaker =  tapply(df$`Num of SAT Test Takers`,df$`School Type`, sum)
TotalEnrollment =  tapply(df$total_enrollment,df$`School Type`, sum)
Read =c(Readingaverage)
Math =c(Mathaverage)
Writing = c(Writingaverage)
ReadSD = c(ReadingSD)
MathsSD = c(MathSD)
WritSD =c(WritingSD)
Taker= c(SATtesttaker)
Enrol= c (TotalEnrollment)
rbind(Read, Math, Writing, ReadSD, MathsSD, WritSD, Taker, Enrol)
summary(df)
pl_math<-ggplot(data = df)+
geom_point(mapping = aes(x = `Num of SAT Test Takers`,y = `SAT Math Avg. Score`),
color="red",position = "jitter")
pl_reading<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers`,y =`SAT Critical Reading Avg. Score`),color="green",position = "jitter")
pl_writing<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers` ,y = `SAT Writing Avg. Score`),
color="orange",position = "jitter")
ggarrange(pl_math,pl_reading,pl_writing)
df$totgen = df$male_per + df$female_per
df$totdiv = df$black_per + df$white_per + df$hispanic_per + df$asian_per
#Simpson Diversity index
df$div = 1 - (((df$black_per*(df$black_per-1))+(df$white_per*(df$white_per-1))+(df$hispanic_per*(df$hispanic_per-1))+(df$asian_per*(df$asian_per-1)))/9900)
# Missing data check
#summary(dfr)
#apply(dfr,2,function(x) sum(is.na(x)))
#apply(dfr,2,function(x) sum(is.na(x))*100/nrow(dfr)) #percentage of NAs
percentmiss = function(x){sum(is.na(x))/length(x)*100} #percent miss row
missing = apply(df,1,percentmiss)
table(missing)
replace = subset(df, missing <= 5)
missing1 = apply(replace,1,percentmiss)
table(missing1)
dont = subset(df, missing > 5)
missing2 = apply(dont,1,percentmiss)
table(missing2)
mah = mahalanobis(replace[,-c(1,2,16,17,18)],
colMeans(replace[,-c(1,2,16,17,18)], na.rm=TRUE),
cov(replace[,-c(1,2,16,17,18)], use ="pairwise.complete.obs")
)    # This piece of code doesn't seem to work
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(data.table)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(corrplot)
library(ztable)
library(moments)
library(readxl)
library(openxlsx)
sat_scores<-
fread(here("RawData","2012_SAT_Results.csv"))
school_demographic<-
fread(here("RawData","2006_-_2012_School_Demographics_and_Accountability_Snapshot.csv"))
school_survey<-
fread(here("RawData","2012_NYC_General_Education_School_Survey.csv"))
school_demographic2012<-school_demographic%>%filter(schoolyear=="20112012")
joined_satanddemographic<-left_join(sat_scores,school_demographic2012,"DBN")
all_joined<-left_join(joined_satanddemographic,school_survey,"DBN")
df<-
all_joined%>%select(DBN,
`SCHOOL NAME`,
'School Type',
`Num of SAT Test Takers`,
'total_enrollment',
`SAT Critical Reading Avg. Score`,
`SAT Math Avg. Score`,
`SAT Writing Avg. Score`,
male_per,
female_per,
black_per,
white_per,
hispanic_per,
asian_per,
ell_percent,
frl_percent,
`Total Engagement Score`)
df$`Num of SAT Test Takers`[] <-
lapply(df$`Num of SAT Test Takers`,function(x)as.character(gsub("s", NA, x))) #replacing "s" with NA's
df<-na.omit(df)
df<-df%>%filter(!is.na(df$`Num of SAT Test Takers`))
df[4:length(df)]<-lapply(df[4:length(df)],function(x) as.numeric(x)) # converting
str(df) # checking to makes sure that the all the character columns have been
# converted to numeric
Readingaverage =  tapply(df$`SAT Critical Reading Avg. Score`,df$`School Type`, mean)
Mathaverage =  tapply(df$`SAT Math Avg. Score`,df$`School Type`, mean)
Writingaverage =  tapply(df$`SAT Writing Avg. Score`,df$`School Type`, mean)
ReadingSD =  tapply(df$`SAT Critical Reading Avg. Score`,df$`School Type`, sd)
MathSD =  tapply(df$`SAT Math Avg. Score`,df$`School Type`, sd)
WritingSD =  tapply(df$`SAT Writing Avg. Score`,df$`School Type`, sd)
SATtesttaker =  tapply(df$`Num of SAT Test Takers`,df$`School Type`, sum)
TotalEnrollment =  tapply(df$total_enrollment,df$`School Type`, sum)
Read =c(Readingaverage)
Math =c(Mathaverage)
Writing = c(Writingaverage)
ReadSD = c(ReadingSD)
MathsSD = c(MathSD)
WritSD =c(WritingSD)
Taker= c(SATtesttaker)
Enrol= c (TotalEnrollment)
rbind(Read, Math, Writing, ReadSD, MathsSD, WritSD, Taker, Enrol)
pl_math<-ggplot(data = df)+
geom_point(mapping = aes(x = `Num of SAT Test Takers`,y = `SAT Math Avg. Score`),
color="red",position = "jitter")
pl_reading<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers`,y =`SAT Critical Reading Avg. Score`),color="green",position = "jitter")
pl_writing<-ggplot(data = df)+
geom_point(mapping = aes(x =`Num of SAT Test Takers` ,y = `SAT Writing Avg. Score`),
color="orange",position = "jitter")
ggarrange(pl_math,pl_reading,pl_writing)
df$totgen = df$male_per + df$female_per
df$totdiv = df$black_per + df$white_per + df$hispanic_per + df$asian_per
df$div = 1 - (((df$black_per*(df$black_per-1))+(df$white_per*(df$white_per-1))+(df$hispanic_per*(df$hispanic_per-1))+(df$asian_per*(df$asian_per-1)))/9900)
percentmiss = function(x){sum(is.na(x))/length(x)*100} #percent miss row
missing = apply(df,1,percentmiss)
table(missing)
replace = subset(df, missing <= 5)
missing1 = apply(replace,1,percentmiss)
table(missing1)
dont = subset(df, missing > 5)
missing2 = apply(dont,1,percentmiss)
table(missing2)
mah = mahalanobis(replace[,-c(1,2,3,18,19,20)],
colMeans(replace[,-c(1,2,3,18,19,20)], na.rm=TRUE),
cov(replace[,-c(1,2,3,18,19,20)], use ="pairwise.complete.obs")
)    # This piece of code doesn't seem to work
cutoff = qchisq(1-.001,ncol(replace))
noout = subset(replace, mah < cutoff) #Eliminate outliers
corrplot(cor(noout[,-c(1,2,3,18,19)]))
cormat = cor(noout[,-c(1,2,3,18,19)]) #Correlation quantified
cormat %>%
as.data.frame() %>%
ztable() %>%
makeHeatmap(mycolor = gradientColor(low="red",mid="white",high="blue")) %>%
print(caption="Correlation Heatmap")
plot.new()
par(mfrow=c(3, 3)); hist(noout$`SAT Critical Reading Avg. Score`, breaks=15, main = "SAT Reading", xlab=NA, ylab=NA); hist(noout$`SAT Math Avg. Score`, breaks=15, main = "SAT Math", xlab=NA, ylab=NA); hist(noout$`SAT Writing Avg. Score`, breaks=15, main = "SAT Writing", xlab=NA, ylab=NA); hist(noout$ell_percent, breaks=15, main = "ELL", xlab=NA, ylab=NA); hist(noout$frl_percent, breaks=15, main = "FRL", xlab=NA, ylab=NA); hist(noout$female_per, breaks=15, main = "Female %", xlab=NA, ylab=NA); hist(noout$white_per, breaks=15, main = "White %", xlab=NA, ylab=NA); hist(noout$black_per, breaks=15, main = "Black %", xlab=NA, ylab=NA); hist(noout$asian_per, breaks=15, main = "Asian %", xlab=NA, ylab=NA)
View(df)
knitr::opts_chunk$set(echo = TRUE)
df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
case_when(frl_percent<25~"low poverty")))
library(here)
library(data.table)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(corrplot)
library(ztable)
library(moments)
library(readxl)
library(openxlsx)
df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
case_when(frl_percent<25~"low poverty")))
df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
case_when(frl_percent<25~"low poverty")))
df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
frl_percent<25~"low poverty"))
test<-df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
frl_percent<25~"low poverty"))
View(test)
df_poverty<-df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
frl_percent<25~"low poverty"))
df_highpoverty<-df_poverty%>%filter(poverty=="high_poverty")
df_poverty%>%filter(poverty %in% c("high poverty","low poverty"))
df_poverty%>%
filter(poverty %in% c("high poverty","low poverty"))%>%
group_by(poverty)%>%summarize(mean(`SAT Math Avg. Score`))
df_poverty%>%
filter(poverty %in% c("high poverty","low poverty"))%>%
group_by(poverty)%>%summarize(mean(`SAT Math Avg. Score`))
t<-df_poverty%>%
filter(poverty %in% c("high poverty","low poverty"))%>%
group_by(poverty)%>%summarize(mean(`SAT Math Avg. Score`))
View(t)
df_poverty<-df_poverty%>%
filter(poverty %in% c("high poverty","low poverty"))
View(df_poverty)
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_point(aes(color=poverty))
View(df_poverty)
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_bar(aes(fill=poverty))
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_bar(aes(fill=poverty),stat = "identity")
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_bar(aes(fill=poverty),stat = "identity")
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_bar(aes(fill=poverty,stat = "identity"))
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`,color=poverty))+
geom_bar()
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`,color=poverty))+
geom_bar(stat = "identity")
pl<-
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`,color=poverty))+
geom_bar(stat = "identity")
pl
poverty_low<-df%>%filter(poverty=="low poverty")
df_poverty<-df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
frl_percent<25~"low poverty"))
poverty_low<-df%>%filter(poverty=="low poverty")
poverty_low<-df_poverty%>%filter(poverty=="low poverty")
hist(poverty_low$`SAT Math Avg. Score`)
poverty_high<-df_poverty%>%filter(poverty=="high poverty")
hist(poverty_high)
hist(poverty_high$`SAT Math Avg. Score`)
View(poverty_low)
View(poverty_high)
hist(poverty_low$`SAT Math Avg. Score`)
hist(poverty_high$`SAT Math Avg. Score`)
View(poverty_low)
df_poverty<-df%>%mutate(poverty=case_when(frl_percent>75~"high poverty",
frl_percent<25~"low poverty"))
poverty_low<-df_poverty%>%filter(poverty=="low poverty")
hist(poverty_low$`SAT Math Avg. Score`)
poverty_high<-df_poverty%>%filter(poverty=="high poverty")
hist(poverty_high$`SAT Math Avg. Score`)
df_poverty<-df_poverty%>%
filter(poverty %in% c("high poverty","low poverty"))
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_point(aes(color=poverty))
t.test(`SAT Math Avg. Score` ~ poverty, data = df_poverty, var.equal = TRUE)
t.test(`SAT Math Avg. Score` ~ poverty, data = df_poverty, var.equal = FALSE)
df_poverty<-df%>%mutate(poverty=case_when(frl_percent>~"mid to high poverty",
frl_percent<50~"mid low to low poverty"))
df_poverty<-df%>%mutate(poverty=case_when(frl_percent>50~"mid to high poverty",
frl_percent<=50~"mid low to low poverty"))
poverty_low<-df_poverty%>%filter(poverty=="mid to high poverty")
hist(poverty_low$`SAT Math Avg. Score`)
poverty_high<-df_poverty%>%filter(poverty=="mid low to low poverty")
hist(poverty_high$`SAT Math Avg. Score`)
df_poverty<-df_poverty%>%
filter(poverty %in% c("mid to high poverty","mid low to low poverty"))
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_point(aes(color=poverty))
t.test(`SAT Math Avg. Score` ~ poverty, data = df_poverty, var.equal = FALSE)
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_point(aes(color=poverty))
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_point(aes(color=poverty))+
xlab("Percentage of students with free or reduced lunches")+
ylab("Average SAT math score")
ggplot(data = df_poverty,aes(x = frl_percent,y = `SAT Math Avg. Score`))+
geom_point(aes(color=poverty))+
xlab("Percentage of students with free or reduced lunches")+
ylab("Average SAT math score")+
ggtitle("understanding relationship between poverty and SAT performance")
df$totgen = df$male_per + df$female_per
df$totdiv = df$black_per + df$white_per + df$hispanic_per + df$asian_per
#Simpson Diversity index
df$div = 1 - (((df$black_per*(df$black_per-1))+(df$white_per*(df$white_per-1))+(df$hispanic_per*(df$hispanic_per-1))+(df$asian_per*(df$asian_per-1)))/9900)
df$totgen = df$male_per + df$female_per
unlink('NYSAT_cache', recursive = TRUE)
mah = mahalanobis(replace[,-c(1,2,16,17,18)],
colMeans(replace[,-c(1,2,16,17,18)], na.rm=TRUE),
cov(replace[,-c(1,2,16,17,18)], use ="pairwise.complete.obs")
)    # This piece of code doesn't seem to work
percentmiss = function(x){sum(is.na(x))/length(x)*100} #percent miss row
missing = apply(df,1,percentmiss)
table(missing)
replace = subset(df, missing <= 5)
missing1 = apply(replace,1,percentmiss)
table(missing1)
dont = subset(df, missing > 5)
missing2 = apply(dont,1,percentmiss)
table(missing2)
mah = mahalanobis(replace[,-c(1,2,16,17,18)],
colMeans(replace[,-c(1,2,16,17,18)], na.rm=TRUE),
cov(replace[,-c(1,2,16,17,18)], use ="pairwise.complete.obs")
)    # This piece of code doesn't seem to work
cutoff = qchisq(1-.001,ncol(replace))
summary(mah < cutoff)
mah = mahalanobis(replace[,-c(1,2,16,17,18)],
colMeans(replace[,-c(1,2,16,17,18)], na.rm=TRUE),
cov(replace[,-c(1,2,16,17,18)], use ="pairwise.complete.obs")
)    # This piece of code doesn't seem to work
knitr::opts_chunk$set(echo = TRUE)
t.test(`SAT Math Avg. Score` ~ poverty, data = df_poverty, var.equal = FALSE)
